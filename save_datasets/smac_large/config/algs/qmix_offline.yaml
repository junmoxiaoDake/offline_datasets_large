# --- QMIX specific parameters ---

# use epsilon greedy action selector
action_selector: "epsilon_greedy"
epsilon_start: 1.0
epsilon_finish: 0.05
epsilon_anneal_time: 100000 # 500000 for 6h_vs_8z

runner: "episode"
batch_size_run: 1 # batch_size_run=4, buffer_size = 2500, batch_size=64  for 3s5z_vs_3s6z
buffer_size: 5000 
batch_size: 128
optimizer: 'adam'

t_max: 10050000

# update the target network every {} episodes
target_update_interval: 200

# use the Q_Learner to train
mac: "n_mac"
agent: "n_rnn"
agent_output_type: q

learner: "q_learner"
mixer: "qmix"
double_q: True
mixing_embed_dim: 32
hypernet_embed: 64
lr: 0.001 # Learning rate for agents
td_lambda: 0.6 # 0.3 for 6h_vs_8z
q_lambda: False

name: "qmix_offline"

save_model: True
save_model_interval: 1000000


#data_quality: "expert"
#if_collect_data : True
#checkpoint_path: "/data/zpq/code_135/ResQ_src/results/models/5m_vs_6m/qmix_env=8_adam_td_lambda__2023-12-27_19-56-56"
